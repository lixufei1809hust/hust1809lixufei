#include<stdio.h>
#include<string.h>
#include<stdlib.h>
typedef struct
{
    int weight;
    int parent,lchild,rchild;
}HTNode,*HuffmanTree;
typedef char ** HuffmanCode;
void Select(HuffmanTree HT,int n,int &s1,int &s2)
{
    int last1=1000;
    int last2=last1+1,i,last3,last4;
    for(i=1;i<=n;i++)
    {
        if(HT[i].parent==0)
        {
            if(HT[i].weight<last1)
            {
                last1=HT[i].weight;
                last3=i;
            }
        }
    }
    for(i=1;i<=n;i++)
    {
        if(HT[i].parent==0)
        {
            if(HT[i].weight<last2&&HT[i].weight>last1)
            {
                last2=HT[i].weight;
                last4=i;
            }
        }
    }
    s1=last3;
    s2=last4;

}
void HuffmanCoding(HuffmanTree &HT,HuffmanCode &HC,int *w,int n)
{
    if(n<=1)return;
    int m=2*n-1,i,s1=0,s2=0,start,c,f;
    HT=(HuffmanTree)malloc((m+1)*sizeof(HTNode));
    HuffmanTree p;
    for(p=HT+1,i=1;i<=n;++i,++p,++w)
    {
        p->weight=*w;
        p->lchild=p->rchild=p->parent=0;
        //printf("%d\n",p->weight);
    }
    for(i=n+1,p=HT+n+1;i<=m;i++,p++)
    {
        p->lchild=p->parent=p->rchild=0;
    }
    for(i=n+1;i<=m;++i)
    {
        Select(HT,i-1,s1,s2);
        //printf("%5d%5d\n",s1,s2);
        HT[s1].parent=i;  HT[s2].parent=i;
        HT[i].lchild=s1;  HT[i].rchild=s2;
        HT[i].weight=HT[s1].weight+HT[s2].weight;
        //printf("%5d",HT[i].weight);
    }
    printf("     weight    parent   lchild  rchild\n");
    for(i=1;i<=m;i++)
    {
        printf("%d%7d%10d%10d%7d\n",i,HT[i].weight,HT[i].parent,HT[i].lchild,HT[i].rchild);
    }
    HC=(HuffmanCode)malloc((n+1)*sizeof(char *));
    char *cd=(char*)malloc(n*sizeof(char));
    cd[n-1]='\0';
    for(i=1;i<=n;i++)
    {
        start=n-1;
        for(c=i,f=HT[i].parent;f!=0;c=f,f=HT[f].parent)
        {
            if(HT[f].lchild==c)
                cd[--start]='0';
            else
                cd[--start]='1';
        }
        HC[i]=(char*)malloc((n-start)*sizeof(char));
        strcpy(HC[i],&cd[start]);
    }
    free(cd);
}

void Decoding(HuffmanTree &HT,char *file,int *w)
{
    int i=0,k=1;
    while(HT[k].parent!=0) k++;
    while(file[i]!='\0')
    {
        int j=k;
        while(HT[j].lchild!=0||HT[j].rchild!=0)
        {
            if(file[i]=='0')
            {
                j=HT[j].lchild;
            }
            else
            {
                j=HT[j].rchild;
            }
            i++;
        }
        printf("%10d",w[j-1]);
    }

}
int main()
{
    int i=1;
    char file[]="110111000111000110101011001";
    HuffmanTree HT;
    HuffmanCode HC;
    int w[8]={5,29,7,8,14,23,3,11};
    HuffmanCoding(HT,HC,w,8);
    printf("\n");
    printf("¹þ·òÂü±àÂëÎª£º\n");
    for(i=1;i<=8;i++)
    {
        printf("%5d:",i);
        puts(HC[i]);
        printf("\n");
    }
    printf("ÒëÂëÎª:\n");
    Decoding(HT,file,w);
    return 0;
}